{% load samltags %}
<saml:Assertion xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:xs="http://www.w3.org/2001/XMLSchema"
                xmlns:saml="urn:oasis:names:tc:SAML:2.0:assertion"
                ID="{{ assertion.id }}"
                Version="2.0"
                IssueInstant="{{ assertion.issue_instant }}"
                >
{% if issuer %}    <saml:Issuer>{{ issuer }}</saml:Issuer>{% endif %}
{% if assertion.signature %}{% indent 4 %}{% signature_xml assertion.signature %}{% endindent %}{% endif %}
    <saml:Subject>
        <saml:NameID SPNameQualifier="{{ saml_request.audience }}"
                     Format="urn:oasis:names:tc:SAML:2.0:nameid-format:email"
                     >{{ assertion.subject.email }}</saml:NameID>
        <saml:SubjectConfirmation Method="urn:oasis:names:tc:SAML:2.0:cm:bearer">
            <saml:SubjectConfirmationData NotOnOrAfter="{{ assertion.not_on_or_after }}"
                                          Recipient="{{ saml_request.acs_url }}"
                                          InResponseTo="{{ saml_request.id }}"
                                          ></saml:SubjectConfirmationData>
        </saml:SubjectConfirmation>
    </saml:Subject>
    <saml:Conditions NotBefore="{{ assertion.not_before }}"
                     NotOnOrAfter="{{ assertion.not_on_or_after }}"
                     >
        <saml:AudienceRestriction>
            <saml:Audience>{{ saml_request.audience }}</saml:Audience>
        </saml:AudienceRestriction>
    </saml:Conditions>
    <saml:AuthnStatement AuthnInstant="{{ assertion.issue_instant }}"
                         SessionNotOnOrAfter="{{ assertion.session.not_on_or_after }}"
                         SessionIndex="{{ assertion.session.index }}"
                         >
        <saml:AuthnContext>
            <saml:AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:Password</saml:AuthnContextClassRef>
        </saml:AuthnContext>
    </saml:AuthnStatement>
</saml:Assertion>
